load("C:/Users/USUARIO/Documents/GitHub/SteppeBirdHotspotsandPAs/Scripts/3.RData")
View(combind1)
View(combind1)
View(Indexes_HP_CP_complete1)
View(Indexes_HP_CP_complete1)
basic_function <- function(x) {
(x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))
}
Indexes_HP_CP_complete1$cmbindx_HP <- basic_function(Indexes_HP_CP_complete1$cmbindx_HP)
Indexes_HP_CP_complete1$cmbindx_CP <- basic_function(Indexes_HP_CP_complete1$cmbindx_CP)
View(Indexes_HP_CP_complete1)
View(Indexes_HP_CP_complete1)
# Now plottinf the frequencies of CI values
threshold_HP <- quantile(Indexes_HP_CP_complete1$cmbindx_HP, 0.95, na.rm = TRUE)
threshold_CP <- quantile(Indexes_HP_CP_complete1$cmbindx_CP, 0.95, na.rm = TRUE)
# Crear histograma para cmbindx_HP
p1 <- ggplot(Indexes_HP_CP_complete1, aes(x = cmbindx_HP)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_HP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("Frequency distribution of the combined index (Historical)") +
xlab("Historical combined index (cmbindx_HP)") +
ylab("Frequency") +
theme_minimal()
library(ggplot2)
# Now plottinf the frequencies of CI values
threshold_HP <- quantile(Indexes_HP_CP_complete1$cmbindx_HP, 0.95, na.rm = TRUE)
threshold_CP <- quantile(Indexes_HP_CP_complete1$cmbindx_CP, 0.95, na.rm = TRUE)
# Crear histograma para cmbindx_HP
p1 <- ggplot(Indexes_HP_CP_complete1, aes(x = cmbindx_HP)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_HP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("Frequency distribution of the combined index (Historical)") +
xlab("Historical combined index (cmbindx_HP)") +
ylab("Frequency") +
theme_minimal()
# Crear histograma para cmbindx_CP
p2 <- ggplot(Indexes_HP_CP_complete1, aes(x = cmbindx_CP)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_CP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("Frequency distribution of the combined index (Current)") +
xlab("Current combined index (cmbindx_CP)") +
ylab("Frequency") +
theme_minimal()
# Mostrar los histogramas
print(p1)
print(p2)
# Crear histograma para cmbindx_HP
p1 <- ggplot(Indexes_HP_CP_complete1, aes(x = cmbindx_HP)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_HP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("Frequency distribution of the area-based combined index (Historical period)") +
xlab("Area-based combined index (Historical period)") +
ylab("Frequency") +
theme_minimal()
# Crear histograma para cmbindx_CP
p2 <- ggplot(Indexes_HP_CP_complete1, aes(x = cmbindx_CP)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_CP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("Frequency distribution of the area-based combined index (Current period)") +
xlab("Area-based combined index (Current period)") +
ylab("Frequency") +
theme_minimal()
# Now plottinf the frequencies of CI values
threshold_HP <- quantile(Indexes_HP_CP_complete1$cmbindx_HP, 0.95, na.rm = TRUE)
threshold_CP <- quantile(Indexes_HP_CP_complete1$cmbindx_CP, 0.95, na.rm = TRUE)
# Crear histograma para cmbindx_HP
p1 <- ggplot(Indexes_HP_CP_complete1, aes(x = cmbindx_HP)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_HP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("Frequency distribution of the area-based combined index (Historical period)") +
xlab("Area-based combined index (Historical period)") +
ylab("Frequency") +
theme_minimal()
# Crear histograma para cmbindx_CP
p2 <- ggplot(Indexes_HP_CP_complete1, aes(x = cmbindx_CP)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_CP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("Frequency distribution of the area-based combined index (Current period)") +
xlab("Area-based combined index (Current period)") +
ylab("Frequency") +
theme_minimal()
# Mostrar los histogramas
print(p1)
print(p2)
# Crear histograma para cmbindx_HP
p1 <- ggplot(Indexes_HP_CP_complete1, aes(x = cmbindx_HP)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_HP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("Frequency distribution of the area-based combined index (Historical period)") +
xlab("") +
ylab("Frequency") +
theme_minimal()
# Crear histograma para cmbindx_CP
p2 <- ggplot(Indexes_HP_CP_complete1, aes(x = cmbindx_CP)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_CP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Area-based combined index (Current period)") +
ylab("Frequency") +
theme_minimal()
# Mostrar los histogramas
print(p1)
print(p2)
# Mostrar los histogramas
print(p1)
# Mostrar los histogramas
print(p1)
# Crear histograma para cmbindx_HP
p1 <- ggplot(Indexes_HP_CP_complete1, aes(x = cmbindx_HP)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_HP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Area-based combined index (Current period)") +
ylab("Frequency") +
theme_minimal()
# Crear histograma para cmbindx_CP
p2 <- ggplot(Indexes_HP_CP_complete1, aes(x = cmbindx_CP)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_CP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Area-based combined index (Current period)") +
ylab("Frequency") +
theme_minimal()
# Mostrar los histogramas
print(p1)
print(p2)
# Mostrar los histogramas
print(p1)
# Crear histograma para cmbindx_HP
p1 <- ggplot(Indexes_HP_CP_complete1, aes(x = cmbindx_HP)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_HP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Area-based combined index (Historical period)") +
ylab("Frequency") +
theme_minimal()
# Crear histograma para cmbindx_CP
p2 <- ggplot(Indexes_HP_CP_complete1, aes(x = cmbindx_CP)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_CP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Area-based combined index (Current period)") +
ylab("Frequency") +
theme_minimal()
# Mostrar los histogramas
print(p1)
print(p2)
# Mostrar los histogramas
print(p1)
print(p2)
load("C:/Users/USUARIO/Documents/GitHub/SteppeBirdHotspotsandPAs/Scripts/5.RData")
View(TaxPrior)
# Now plotting the frequencies of CI values
basic_function <- function(x) {
(x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))
}
TaxPrior$combindex_SCPTS <- basic_function(TaxPrior$combindex_SCPTS)
TaxPrior$combindex_RLS <- basic_function(TaxPrior$combindex_RLS)
threshold_SCPTS <- quantile(TaxPrior$combindex_SCPTS, 0.95, na.rm = TRUE)
threshold_RLS <- quantile(TaxPrior$combindex_RLS, 0.95, na.rm = TRUE)
# Crear histograma para cmbindx_HP
SCPTSfreq <- ggplot(TaxPrior, aes(x = combindex_SCPTS)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_HP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Species-based combined index (SCPTS)") +
ylab("Frequency") +
theme_minimal()
# Crear histograma para cmbindx_CP
RLSfreq <- ggplot(TaxPrior, aes(x = combindex_RLS)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_CP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Species-based combined index (RLS)") +
ylab("Frequency") +
theme_minimal()
# Mostrar los histogramas
print(SCPTSfreq)
print(RLSfreq)
TaxPrior <- Species_data_P1_P2
TaxPrior$RLS.2004  <- NULL
TaxPrior$EPS.2004  <- NULL
TaxPrior$SPEC.2004  <- NULL
TaxPrior$N_hotspot_cells_HP  <- NULL
TaxPrior$RLS.2021  <- NULL
TaxPrior$SCPTS.2023  <- NULL
TaxPrior$EPS.2023  <- NULL
TaxPrior$SPEC.2023  <- NULL
TaxPrior$N_hotspot_cells_CP  <- NULL
#Calculating correlations among indices
corrmatrix0 <- TaxPrior[, c(6:11)]
corrmatrix0 <- corrmatrix0[, c(6, 1, 3, 4, 5, 2)]
corrmatrix0  <- as.data.frame(cor(corrmatrix0))
write_xlsx(corrmatrix0, 'Data/CIs_indices_correlation.xlsx')
TaxPrior <- Species_data_P1_P2
TaxPrior$RLS.2004  <- NULL
TaxPrior$EPS.2004  <- NULL
TaxPrior$SPEC.2004  <- NULL
TaxPrior$N_hotspot_cells_HP  <- NULL
TaxPrior$RLS.2021  <- NULL
TaxPrior$SCPTS.2023  <- NULL
TaxPrior$EPS.2023  <- NULL
TaxPrior$SPEC.2023  <- NULL
TaxPrior$N_hotspot_cells_CP  <- NULL
#Calculating correlations among indices
corrmatrix0 <- TaxPrior[, c(6:11)]
corrmatrix0 <- corrmatrix0[, c(6, 1, 3, 4, 5, 2)]
corrmatrix0  <- as.data.frame(cor(corrmatrix0))
#min max linear rescaling
basic_function <- function(x) {
(x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))
}
# inverted rescaling for cells ocuppancy
inverted_function <- function(x) {
1 - basic_function(x)
}
# Apply the rescaling function to each relevant column and store the results in new columns
TaxPrior$pch_cells_sc <- round(inverted_function(TaxPrior$pch_cells), 2)
TaxPrior <- Species_data_P1_P2
TaxPrior$RLS.2004  <- NULL
TaxPrior$EPS.2004  <- NULL
TaxPrior$SPEC.2004  <- NULL
TaxPrior$N_hotspot_cells_HP  <- NULL
TaxPrior$RLS.2021  <- NULL
TaxPrior$SCPTS.2023  <- NULL
TaxPrior$EPS.2023  <- NULL
TaxPrior$SPEC.2023  <- NULL
TaxPrior$N_hotspot_cells_CP  <- NULL
#Calculating correlations among indices
corrmatrix0 <- TaxPrior[, c(6:11)]
corrmatrix0 <- corrmatrix0[, c(6, 1, 3, 4, 5, 2)]
corrmatrix0  <- as.data.frame(cor(corrmatrix0))
load("C:/Users/USUARIO/Documents/GitHub/SteppeBirdHotspotsandPAs/Scripts/5.RData")
threshold_SCPTS <- quantile(TaxPrior$combindex_SCPTS, 0.95, na.rm = TRUE)
threshold_RLS <- quantile(TaxPrior$combindex_RLS, 0.95, na.rm = TRUE)
# Crear histograma para cmbindx_HP
SCPTSfreq <- ggplot(TaxPrior, aes(x = combindex_SCPTS)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_HP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Species-based combined index (SCPTS)") +
ylab("Frequency") +
theme_minimal()
# Crear histograma para cmbindx_CP
RLSfreq <- ggplot(TaxPrior, aes(x = combindex_RLS)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_CP, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Species-based combined index (RLS)") +
ylab("Frequency") +
theme_minimal()
# Mostrar los histogramas
print(SCPTSfreq)
print(RLSfreq)
# Mostrar los histogramas
print(SCPTSfreq)
View(TaxPrior)
View(TaxPrior)
threshold_SCPTS <- quantile(TaxPrior$combindex_SCPTS, 0.667, na.rm = TRUE)
threshold_RLS <- quantile(TaxPrior$combindex_RLS, 0.667, na.rm = TRUE)
# Crear histograma para cmbindx_HP
SCPTSfreq <- ggplot(TaxPrior, aes(x = combindex_SCPTS)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_SCPTS, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Species-based combined index (SCPTS)") +
ylab("Frequency") +
theme_minimal()
# Crear histograma para cmbindx_CP
RLSfreq <- ggplot(TaxPrior, aes(x = combindex_RLS)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_RLS, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Species-based combined index (RLS)") +
ylab("Frequency") +
theme_minimal()
# Mostrar los histogramas
print(SCPTSfreq)
print(RLSfreq)
# Mostrar los histogramas
print(SCPTSfreq)
print(RLSfreq)
# Now plotting the frequencies of CI values
basic_function <- function(x) {
(x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))
}
TaxPrior$combindex_SCPTS <- basic_function(TaxPrior$combindex_SCPTS)
TaxPrior$combindex_RLS <- basic_function(TaxPrior$combindex_RLS)
threshold_SCPTS <- quantile(TaxPrior$combindex_SCPTS, 0.667, na.rm = TRUE)
threshold_RLS <- quantile(TaxPrior$combindex_RLS, 0.667, na.rm = TRUE)
# Crear histograma para cmbindx_HP
SCPTSfreq <- ggplot(TaxPrior, aes(x = combindex_SCPTS)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_SCPTS, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Species-based combined index (SCPTS)") +
ylab("Frequency") +
theme_minimal()
# Crear histograma para cmbindx_CP
RLSfreq <- ggplot(TaxPrior, aes(x = combindex_RLS)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_RLS, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Species-based combined index (RLS)") +
ylab("Frequency") +
theme_minimal()
# Mostrar los histogramas
print(SCPTSfreq)
print(RLSfreq)
# Saving as CSV
write.csv(TaxPrior, "Data/taxpriorities11February.csv", row.names = FALSE)
# Mostrar los histogramas
print(SCPTSfreq)
# Mostrar los histogramas
print(SCPTSfreq)
# Saving as CSV
write.csv(TaxPrior, "Data/taxpriorities11February.csv", row.names = FALSE)
TaxPrior <- Species_data_P1_P2
TaxPrior$RLS.2004  <- NULL
TaxPrior$EPS.2004  <- NULL
TaxPrior$SPEC.2004  <- NULL
TaxPrior$N_hotspot_cells_HP  <- NULL
TaxPrior$RLS.2021  <- NULL
TaxPrior$SCPTS.2023  <- NULL
TaxPrior$EPS.2023  <- NULL
TaxPrior$SPEC.2023  <- NULL
TaxPrior$N_hotspot_cells_CP  <- NULL
#Calculating correlations among indices
corrmatrix0 <- TaxPrior[, c(6:11)]
corrmatrix0 <- corrmatrix0[, c(6, 1, 3, 4, 5, 2)]
corrmatrix0  <- as.data.frame(cor(corrmatrix0))
TaxPrior <- Species_data_P1_P2
TaxPrior$RLS.2004  <- NULL
TaxPrior$EPS.2004  <- NULL
TaxPrior$SPEC.2004  <- NULL
TaxPrior$N_hotspot_cells_HP  <- NULL
TaxPrior$RLS.2021  <- NULL
TaxPrior$SCPTS.2023  <- NULL
TaxPrior$EPS.2023  <- NULL
TaxPrior$SPEC.2023  <- NULL
TaxPrior$N_hotspot_cells_CP  <- NULL
#Calculating correlations among indices
corrmatrix0 <- TaxPrior[, c(6:11)]
corrmatrix0 <- corrmatrix0[, c(6, 1, 3, 4, 5, 2)]
corrmatrix0  <- as.data.frame(cor(corrmatrix0))
#min max linear rescaling
basic_function <- function(x) {
(x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE))
}
# inverted rescaling for cells ocuppancy
inverted_function <- function(x) {
1 - basic_function(x)
}
# Apply the rescaling function to each relevant column and store the results in new columns
TaxPrior$pch_cells_sc <- round(inverted_function(TaxPrior$pch_cells), 2)
rm(list = ls())
load("C:/Users/USUARIO/Documents/GitHub/SteppeBirdHotspotsandPAs/Scripts/5.RData")
threshold_SCPTS <- quantile(TaxPrior$combindex_SCPTS, 0.667, na.rm = TRUE)
threshold_RLS <- quantile(TaxPrior$combindex_RLS, 0.667, na.rm = TRUE)
# Crear histograma para cmbindx_HP
SCPTSfreq <- ggplot(TaxPrior, aes(x = combindex_SCPTS)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_SCPTS, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Species-based combined index (SCPTS)") +
ylab("Frequency") +
theme_minimal()
# Crear histograma para cmbindx_CP
RLSfreq <- ggplot(TaxPrior, aes(x = combindex_RLS)) +
geom_histogram(bins = 30, fill = "gray", color = "black", alpha = 0.7) +
geom_vline(xintercept = threshold_RLS, color = "red", linetype = "dashed", linewidth = 1) +
ggtitle("") +
xlab("Species-based combined index (RLS)") +
ylab("Frequency") +
theme_minimal()
# Mostrar los histogramas
print(SCPTSfreq)
print(RLSfreq)
# Mostrar los histogramas
print(SCPTSfreq)
View(TaxPrior)
